{"ast":null,"code":"var _jsxFileName = \"/home/albert/Desktop/combine-project/react-authentication/src/components/Auth/AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useRef, useState } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport useInput from \"../../hooks -validation/use-input\";\nimport AuthContext from \"../../store/auth-context\";\nimport LoadingSpinner from \"../../UI/LoadingSpinner\";\nimport classes from \"./AuthForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst passwordValidation = value => {\n  return value.trim() !== \"\" && value.trim().length > 5;\n};\n\nconst emailValidation = value => {\n  return value.includes(\"@\") && value.includes(\".com\");\n};\n\nconst AuthForm = () => {\n  _s();\n\n  const history = useHistory();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const authCtx = useContext(AuthContext);\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    value: enteredPassword,\n    isValid: enteredPasswordIsValid,\n    hasError: passwordInputHasError,\n    valueChangeHandler: passwordChangedHandler,\n    inputBlurHandler: passwordBlurHandler,\n    reset: resetNameInput\n  } = useInput(passwordValidation);\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput\n  } = useInput(emailValidation);\n  let formIsValid = false;\n\n  if (enteredPasswordIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (!enteredPasswordIsValid) {\n      return;\n    }\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value; // optional: Add validation\n\n    setIsLoading(true);\n    let url;\n\n    if (isLogin) {\n      url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDPbHagJYUL0Xn2PNv753puWCvP6WNAVlY\";\n    } else {\n      url = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDPbHagJYUL0Xn2PNv753puWCvP6WNAVlY\";\n    }\n\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      setIsLoading(false);\n\n      if (res.ok) {\n        return res.json();\n      } else {\n        return res.json().then(data => {\n          let errorMessage = \"Authentication failed!\"; // if (data && data.error && data.error.message) {\n          //   errorMessage = data.error.message;\n          // }\n\n          throw new Error(errorMessage);\n        });\n      }\n    }).then(data => {\n      const expirationTime = new Date(new Date().getTime() + +data.expiresIn * 1000);\n      authCtx.login(data.idToken, expirationTime.toISOString());\n      history.replace(\"/profile\");\n      console.log(data);\n    }).catch(err => {\n      alert(err.message);\n    });\n    emailInputRef.current.value = \"\";\n    passwordInputRef.current.value = \"\";\n  };\n\n  const nameInputClasses = passwordInputHasError ? `${classes.control} ${classes.invalid}` : classes['form-control'];\n  const emailInputClasses = emailInputHasError ? `${classes.control} ${classes.invalid}` : classes['form-control'];\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: nameIn,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          ref: emailInputRef,\n          onChange: emailChangeHandler,\n          onBlur: emailBlurHandler,\n          value: enteredEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), emailInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Please enter a valid email.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          ref: passwordInputRef,\n          onChange: passwordChangedHandler,\n          onBlur: passwordBlurHandler,\n          value: enteredPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), passwordInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Password must not be empty or less than 6.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? \"Login\" : \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), !isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          disabled: !formIsValid,\n          children: isLogin ? \"Create new account\" : \"Login with existing account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), !isLoading && /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/reset\",\n          children: \"Forgotten password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"NvPZd5WLrTl2MZfcL3+JdK0Pz1w=\", false, function () {\n  return [useHistory, useInput, useInput];\n});\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["useContext","useRef","useState","useHistory","Link","useInput","AuthContext","LoadingSpinner","classes","passwordValidation","value","trim","length","emailValidation","includes","AuthForm","history","emailInputRef","passwordInputRef","authCtx","isLogin","setIsLogin","isLoading","setIsLoading","enteredPassword","isValid","enteredPasswordIsValid","hasError","passwordInputHasError","valueChangeHandler","passwordChangedHandler","inputBlurHandler","passwordBlurHandler","reset","resetNameInput","enteredEmail","enteredEmailIsValid","emailInputHasError","emailChangeHandler","emailBlurHandler","resetEmailInput","formIsValid","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","current","url","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","errorMessage","Error","expirationTime","Date","getTime","expiresIn","login","idToken","toISOString","replace","console","log","catch","err","alert","message","nameInputClasses","control","invalid","emailInputClasses","auth","nameIn","actions","toggle"],"sources":["/home/albert/Desktop/combine-project/react-authentication/src/components/Auth/AuthForm.js"],"sourcesContent":["import { useContext, useRef, useState } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport useInput from \"../../hooks -validation/use-input\";\nimport AuthContext from \"../../store/auth-context\";\nimport LoadingSpinner from \"../../UI/LoadingSpinner\";\nimport classes from \"./AuthForm.module.css\";\n\nconst passwordValidation = (value) => {\n  return value.trim() !== \"\" && value.trim().length > 5;\n};\n\nconst emailValidation = (value) => {\n  return value.includes(\"@\") && value.includes(\".com\");\n};\n\nconst AuthForm = () => {\n  const history = useHistory();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const authCtx = useContext(AuthContext);\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const {\n    value: enteredPassword,\n    isValid: enteredPasswordIsValid,\n    hasError: passwordInputHasError,\n    valueChangeHandler: passwordChangedHandler,\n    inputBlurHandler: passwordBlurHandler,\n    reset: resetNameInput,\n  } = useInput(passwordValidation);\n\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput,\n  } = useInput(emailValidation);\n\n  let formIsValid = false;\n\n  if (enteredPasswordIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    if (!enteredPasswordIsValid) {\n      return;\n    }\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    // optional: Add validation\n\n    setIsLoading(true);\n    let url;\n    if (isLogin) {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDPbHagJYUL0Xn2PNv753puWCvP6WNAVlY\";\n    } else {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDPbHagJYUL0Xn2PNv753puWCvP6WNAVlY\";\n    }\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            let errorMessage = \"Authentication failed!\";\n            // if (data && data.error && data.error.message) {\n            //   errorMessage = data.error.message;\n            // }\n\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then((data) => {\n        const expirationTime = new Date(\n          new Date().getTime() + +data.expiresIn * 1000\n        );\n        authCtx.login(data.idToken, expirationTime.toISOString());\n        history.replace(\"/profile\");\n        console.log(data);\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n    emailInputRef.current.value = \"\";\n    passwordInputRef.current.value = \"\";\n  };\n\n\n  const nameInputClasses = passwordInputHasError\n    ? `${classes.control} ${classes.invalid}`\n    : classes['form-control'];\n\n  const emailInputClasses = emailInputHasError\n    ? `${classes.control} ${classes.invalid}`\n    : classes['form-control'];\n\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={nameIn}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            ref={emailInputRef}\n            onChange={emailChangeHandler}\n            onBlur={emailBlurHandler}\n            value={enteredEmail}\n          />\n          {emailInputHasError && (\n          <p className='error-text'>Please enter a valid email.</p>\n        )}\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            ref={passwordInputRef}\n            onChange={passwordChangedHandler}\n            onBlur={passwordBlurHandler}\n            value={enteredPassword}\n          />\n          {passwordInputHasError && (\n          <p className='error-text'>Password must not be empty or less than 6.</p>\n        )}\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && (\n            <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n          )}\n          {isLoading && (\n            <div>\n              <LoadingSpinner />{\" \"}\n            </div>\n          )}\n          {!isLoading && (\n            <button\n              type=\"button\"\n              className={classes.toggle}\n              onClick={switchAuthModeHandler}\n              disabled={!formIsValid}\n            >\n              {isLogin ? \"Create new account\" : \"Login with existing account\"}\n            </button>\n          )}\n          {!isLoading && <Link to=\"/reset\">Forgotten password?</Link>}\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}