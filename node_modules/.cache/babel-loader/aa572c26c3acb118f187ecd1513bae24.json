{"ast":null,"code":"import _slicedToArray from\"/home/albert/Desktop/combine-project/react-authentication/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useContext,useRef,useState}from\"react\";import{useHistory,Link}from\"react-router-dom\";import useInput from\"../../hooks -validation/use-input\";import AuthContext from\"../../store/auth-context\";import LoadingSpinner from\"../../UI/LoadingSpinner\";import classes from\"./AuthForm.module.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var passwordValidation=function passwordValidation(value){return value.trim()!==\"\"&&value.trim().length>6;};var emailValidation=function emailValidation(value){return value.includes(\"@\")&&value.includes(\".com\");};var AuthForm=function AuthForm(){var history=useHistory();var emailInputRef=useRef();var passwordInputRef=useRef();var authCtx=useContext(AuthContext);var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isLogin=_useState2[0],setIsLogin=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoading=_useState4[1];var _useInput=useInput(passwordValidation),enteredPassword=_useInput.value,enteredPasswordIsValid=_useInput.isValid,passwordInputHasError=_useInput.hasError,passwordChangedHandler=_useInput.valueChangeHandler,passwordBlurHandler=_useInput.inputBlurHandler,resetPasswordInput=_useInput.reset;var _useInput2=useInput(emailValidation),enteredEmail=_useInput2.value,enteredEmailIsValid=_useInput2.isValid,emailInputHasError=_useInput2.hasError,emailChangeHandler=_useInput2.valueChangeHandler,emailBlurHandler=_useInput2.inputBlurHandler,resetEmailInput=_useInput2.reset;var formIsValid=false;if(enteredPasswordIsValid&&enteredEmailIsValid){formIsValid=true;}var switchAuthModeHandler=function switchAuthModeHandler(){setIsLogin(function(prevState){return!prevState;});};var submitHandler=function submitHandler(event){event.preventDefault();var enteredEmail=emailInputRef.current.value;var enteredPassword=passwordInputRef.current.value;// optional: Add validation\nif(!enteredPasswordIsValid){return;}setIsLoading(true);var url;if(isLogin){url=\"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDPbHagJYUL0Xn2PNv753puWCvP6WNAVlY\";}else{url=\"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDPbHagJYUL0Xn2PNv753puWCvP6WNAVlY\";}fetch(url,{method:\"POST\",body:JSON.stringify({email:enteredEmail,password:enteredPassword,returnSecureToken:true}),headers:{\"Content-Type\":\"application/json\"}}).then(function(res){setIsLoading(false);if(res.ok){return res.json();}else{return res.json().then(function(data){var errorMessage=\"Authentication failed!\";// if (data && data.error && data.error.message) {\n//   errorMessage = data.error.message;\n// }\nthrow new Error(errorMessage);});}}).then(function(data){var expirationTime=new Date(new Date().getTime()+ +data.expiresIn*1000);authCtx.login(data.idToken,expirationTime.toISOString());history.replace(\"/profile\");console.log(data);}).catch(function(err){alert(err.message);});resetPasswordInput();resetEmailInput();};return/*#__PURE__*/_jsxs(\"section\",{className:classes.auth,children:[/*#__PURE__*/_jsx(\"h1\",{children:isLogin?\"Login\":\"Sign Up\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"\".concat(classes.control,\" \").concat(!enteredPasswordIsValid&&classes.invalid),children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",className:\"\".concat(!enteredEmailIsValid&&classes.invalid),children:!enteredEmailIsValid?\"Invalid Email\":\"Your Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",ref:emailInputRef,onChange:emailChangeHandler,onBlur:emailBlurHandler,value:enteredEmail}),emailInputHasError&&/*#__PURE__*/_jsx(\"p\",{className:\"error-text\",children:\"Please enter a valid email.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"\".concat(classes.control,\" \").concat(!enteredEmailIsValid&&classes.invalid),children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",className:\"\".concat(!enteredPasswordIsValid&&classes.invalid),children:!enteredPasswordIsValid?\"Invalid Password\":\"Your Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",ref:passwordInputRef,onChange:passwordChangedHandler,onBlur:passwordBlurHandler,value:enteredPassword}),passwordInputHasError&&/*#__PURE__*/_jsx(\"p\",{className:\"error-text\",children:\"Password must not be empty or less than 7.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.actions,children:[!isLoading&&/*#__PURE__*/_jsx(\"button\",{disabled:!formIsValid,children:isLogin?\"Login\":\"Create Account\"}),isLoading&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(LoadingSpinner,{}),\" \"]}),!isLoading&&/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:classes.toggle,onClick:switchAuthModeHandler,children:isLogin?\"Create new account\":\"Login with existing account\"}),!isLoading&&/*#__PURE__*/_jsx(Link,{to:\"/reset\",children:\"Forgotten password?\"})]})]})]});};export default AuthForm;","map":{"version":3,"names":["useContext","useRef","useState","useHistory","Link","useInput","AuthContext","LoadingSpinner","classes","passwordValidation","value","trim","length","emailValidation","includes","AuthForm","history","emailInputRef","passwordInputRef","authCtx","isLogin","setIsLogin","isLoading","setIsLoading","enteredPassword","enteredPasswordIsValid","isValid","passwordInputHasError","hasError","passwordChangedHandler","valueChangeHandler","passwordBlurHandler","inputBlurHandler","resetPasswordInput","reset","enteredEmail","enteredEmailIsValid","emailInputHasError","emailChangeHandler","emailBlurHandler","resetEmailInput","formIsValid","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","current","url","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","errorMessage","Error","expirationTime","Date","getTime","expiresIn","login","idToken","toISOString","replace","console","log","catch","err","alert","message","auth","control","invalid","actions","toggle"],"sources":["/home/albert/Desktop/combine-project/react-authentication/src/components/Auth/AuthForm.js"],"sourcesContent":["import { useContext, useRef, useState } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport useInput from \"../../hooks -validation/use-input\";\nimport AuthContext from \"../../store/auth-context\";\nimport LoadingSpinner from \"../../UI/LoadingSpinner\";\nimport classes from \"./AuthForm.module.css\";\n\nconst passwordValidation = (value) => {\n  return value.trim() !== \"\" && value.trim().length > 6;\n};\n\nconst emailValidation = (value) => {\n  return value.includes(\"@\") && value.includes(\".com\");\n};\n\nconst AuthForm = () => {\n  const history = useHistory();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const authCtx = useContext(AuthContext);\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const {\n    value: enteredPassword,\n    isValid: enteredPasswordIsValid,\n    hasError: passwordInputHasError,\n    valueChangeHandler: passwordChangedHandler,\n    inputBlurHandler: passwordBlurHandler,\n    reset: resetPasswordInput,\n  } = useInput(passwordValidation);\n\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput,\n  } = useInput(emailValidation);\n\n  let formIsValid = false;\n\n  if (enteredPasswordIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    // optional: Add validation\n    if (!enteredPasswordIsValid) {\n      return;\n    }\n\n    setIsLoading(true);\n    let url;\n    if (isLogin) {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDPbHagJYUL0Xn2PNv753puWCvP6WNAVlY\";\n    } else {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDPbHagJYUL0Xn2PNv753puWCvP6WNAVlY\";\n    }\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            let errorMessage = \"Authentication failed!\";\n            // if (data && data.error && data.error.message) {\n            //   errorMessage = data.error.message;\n            // }\n\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then((data) => {\n        const expirationTime = new Date(\n          new Date().getTime() + +data.expiresIn * 1000\n        );\n        authCtx.login(data.idToken, expirationTime.toISOString());\n        history.replace(\"/profile\");\n        console.log(data);\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n    resetPasswordInput();\n    resetEmailInput();\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            !enteredPasswordIsValid && classes.invalid\n          }`}\n        >\n          <label\n            htmlFor=\"email\"\n            className={`${!enteredEmailIsValid && classes.invalid}`}\n          >\n            {!enteredEmailIsValid ? \"Invalid Email\" : \"Your Email\"}\n          </label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            ref={emailInputRef}\n            onChange={emailChangeHandler}\n            onBlur={emailBlurHandler}\n            value={enteredEmail}\n          />\n          {emailInputHasError && (\n            <p className=\"error-text\">Please enter a valid email.</p>\n          )}\n        </div>\n        <div\n          className={`${classes.control} ${\n            !enteredEmailIsValid && classes.invalid\n          }`}\n        >\n          <label\n            htmlFor=\"password\"\n            className={`${!enteredPasswordIsValid && classes.invalid}`}\n          >\n            {!enteredPasswordIsValid ? \"Invalid Password\" : \"Your Password\"}\n          </label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            ref={passwordInputRef}\n            onChange={passwordChangedHandler}\n            onBlur={passwordBlurHandler}\n            value={enteredPassword}\n          />\n          {passwordInputHasError && (\n            <p className=\"error-text\">\n              Password must not be empty or less than 7.\n            </p>\n          )}\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && (\n            <button disabled={!formIsValid}>\n              {isLogin ? \"Login\" : \"Create Account\"}\n            </button>\n          )}\n          {isLoading && (\n            <div>\n              <LoadingSpinner />{\" \"}\n            </div>\n          )}\n          {!isLoading && (\n            <button\n              type=\"button\"\n              className={classes.toggle}\n              onClick={switchAuthModeHandler}\n            >\n              {isLogin ? \"Create new account\" : \"Login with existing account\"}\n            </button>\n          )}\n          {!isLoading && <Link to=\"/reset\">Forgotten password?</Link>}\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"],"mappings":"+IAAA,OAASA,UAAT,CAAqBC,MAArB,CAA6BC,QAA7B,KAA6C,OAA7C,CACA,OAASC,UAAT,CAAqBC,IAArB,KAAiC,kBAAjC,CACA,MAAOC,SAAP,KAAqB,mCAArB,CACA,MAAOC,YAAP,KAAwB,0BAAxB,CACA,MAAOC,eAAP,KAA2B,yBAA3B,CACA,MAAOC,QAAP,KAAoB,uBAApB,C,wFAEA,GAAMC,mBAAkB,CAAG,QAArBA,mBAAqB,CAACC,KAAD,CAAW,CACpC,MAAOA,MAAK,CAACC,IAAN,KAAiB,EAAjB,EAAuBD,KAAK,CAACC,IAAN,GAAaC,MAAb,CAAsB,CAApD,CACD,CAFD,CAIA,GAAMC,gBAAe,CAAG,QAAlBA,gBAAkB,CAACH,KAAD,CAAW,CACjC,MAAOA,MAAK,CAACI,QAAN,CAAe,GAAf,GAAuBJ,KAAK,CAACI,QAAN,CAAe,MAAf,CAA9B,CACD,CAFD,CAIA,GAAMC,SAAQ,CAAG,QAAXA,SAAW,EAAM,CACrB,GAAMC,QAAO,CAAGb,UAAU,EAA1B,CACA,GAAMc,cAAa,CAAGhB,MAAM,EAA5B,CACA,GAAMiB,iBAAgB,CAAGjB,MAAM,EAA/B,CACA,GAAMkB,QAAO,CAAGnB,UAAU,CAACM,WAAD,CAA1B,CACA,cAA8BJ,QAAQ,CAAC,IAAD,CAAtC,wCAAOkB,OAAP,eAAgBC,UAAhB,eACA,eAAkCnB,QAAQ,CAAC,KAAD,CAA1C,yCAAOoB,SAAP,eAAkBC,YAAlB,eAEA,cAOIlB,QAAQ,CAACI,kBAAD,CAPZ,CACSe,eADT,WACEd,KADF,CAEWe,sBAFX,WAEEC,OAFF,CAGYC,qBAHZ,WAGEC,QAHF,CAIsBC,sBAJtB,WAIEC,kBAJF,CAKoBC,mBALpB,WAKEC,gBALF,CAMSC,kBANT,WAMEC,KANF,CASA,eAOI7B,QAAQ,CAACQ,eAAD,CAPZ,CACSsB,YADT,YACEzB,KADF,CAEW0B,mBAFX,YAEEV,OAFF,CAGYW,kBAHZ,YAGET,QAHF,CAIsBU,kBAJtB,YAIER,kBAJF,CAKoBS,gBALpB,YAKEP,gBALF,CAMSQ,eANT,YAMEN,KANF,CASA,GAAIO,YAAW,CAAG,KAAlB,CAEA,GAAIhB,sBAAsB,EAAIW,mBAA9B,CAAmD,CACjDK,WAAW,CAAG,IAAd,CACD,CAED,GAAMC,sBAAqB,CAAG,QAAxBA,sBAAwB,EAAM,CAClCrB,UAAU,CAAC,SAACsB,SAAD,QAAe,CAACA,SAAhB,EAAD,CAAV,CACD,CAFD,CAIA,GAAMC,cAAa,CAAG,QAAhBA,cAAgB,CAACC,KAAD,CAAW,CAC/BA,KAAK,CAACC,cAAN,GAEA,GAAMX,aAAY,CAAGlB,aAAa,CAAC8B,OAAd,CAAsBrC,KAA3C,CACA,GAAMc,gBAAe,CAAGN,gBAAgB,CAAC6B,OAAjB,CAAyBrC,KAAjD,CAEA;AACA,GAAI,CAACe,sBAAL,CAA6B,CAC3B,OACD,CAEDF,YAAY,CAAC,IAAD,CAAZ,CACA,GAAIyB,IAAJ,CACA,GAAI5B,OAAJ,CAAa,CACX4B,GAAG,CACD,mHADF,CAED,CAHD,IAGO,CACLA,GAAG,CACD,uGADF,CAED,CACDC,KAAK,CAACD,GAAD,CAAM,CACTE,MAAM,CAAE,MADC,CAETC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACnBC,KAAK,CAAEnB,YADY,CAEnBoB,QAAQ,CAAE/B,eAFS,CAGnBgC,iBAAiB,CAAE,IAHA,CAAf,CAFG,CAOTC,OAAO,CAAE,CACP,eAAgB,kBADT,CAPA,CAAN,CAAL,CAWGC,IAXH,CAWQ,SAACC,GAAD,CAAS,CACbpC,YAAY,CAAC,KAAD,CAAZ,CACA,GAAIoC,GAAG,CAACC,EAAR,CAAY,CACV,MAAOD,IAAG,CAACE,IAAJ,EAAP,CACD,CAFD,IAEO,CACL,MAAOF,IAAG,CAACE,IAAJ,GAAWH,IAAX,CAAgB,SAACI,IAAD,CAAU,CAC/B,GAAIC,aAAY,CAAG,wBAAnB,CACA;AACA;AACA;AAEA,KAAM,IAAIC,MAAJ,CAAUD,YAAV,CAAN,CACD,CAPM,CAAP,CAQD,CACF,CAzBH,EA0BGL,IA1BH,CA0BQ,SAACI,IAAD,CAAU,CACd,GAAMG,eAAc,CAAG,GAAIC,KAAJ,CACrB,GAAIA,KAAJ,GAAWC,OAAX,GAAuB,EAACL,IAAI,CAACM,SAAN,CAAkB,IADpB,CAAvB,CAGAjD,OAAO,CAACkD,KAAR,CAAcP,IAAI,CAACQ,OAAnB,CAA4BL,cAAc,CAACM,WAAf,EAA5B,EACAvD,OAAO,CAACwD,OAAR,CAAgB,UAAhB,EACAC,OAAO,CAACC,GAAR,CAAYZ,IAAZ,EACD,CAjCH,EAkCGa,KAlCH,CAkCS,SAACC,GAAD,CAAS,CACdC,KAAK,CAACD,GAAG,CAACE,OAAL,CAAL,CACD,CApCH,EAqCA7C,kBAAkB,GAClBO,eAAe,GAChB,CA3DD,CA6DA,mBACE,iBAAS,SAAS,CAAEhC,OAAO,CAACuE,IAA5B,wBACE,oBAAK3D,OAAO,CAAG,OAAH,CAAa,SAAzB,EADF,cAEE,cAAM,QAAQ,CAAEwB,aAAhB,wBACE,aACE,SAAS,WAAKpC,OAAO,CAACwE,OAAb,aACP,CAACvD,sBAAD,EAA2BjB,OAAO,CAACyE,OAD5B,CADX,wBAKE,cACE,OAAO,CAAC,OADV,CAEE,SAAS,WAAK,CAAC7C,mBAAD,EAAwB5B,OAAO,CAACyE,OAArC,CAFX,UAIG,CAAC7C,mBAAD,CAAuB,eAAvB,CAAyC,YAJ5C,EALF,cAWE,cACE,IAAI,CAAC,OADP,CAEE,EAAE,CAAC,OAFL,CAGE,GAAG,CAAEnB,aAHP,CAIE,QAAQ,CAAEqB,kBAJZ,CAKE,MAAM,CAAEC,gBALV,CAME,KAAK,CAAEJ,YANT,EAXF,CAmBGE,kBAAkB,eACjB,UAAG,SAAS,CAAC,YAAb,yCApBJ,GADF,cAwBE,aACE,SAAS,WAAK7B,OAAO,CAACwE,OAAb,aACP,CAAC5C,mBAAD,EAAwB5B,OAAO,CAACyE,OADzB,CADX,wBAKE,cACE,OAAO,CAAC,UADV,CAEE,SAAS,WAAK,CAACxD,sBAAD,EAA2BjB,OAAO,CAACyE,OAAxC,CAFX,UAIG,CAACxD,sBAAD,CAA0B,kBAA1B,CAA+C,eAJlD,EALF,cAWE,cACE,IAAI,CAAC,UADP,CAEE,EAAE,CAAC,UAFL,CAGE,GAAG,CAAEP,gBAHP,CAIE,QAAQ,CAAEW,sBAJZ,CAKE,MAAM,CAAEE,mBALV,CAME,KAAK,CAAEP,eANT,EAXF,CAmBGG,qBAAqB,eACpB,UAAG,SAAS,CAAC,YAAb,wDApBJ,GAxBF,cAiDE,aAAK,SAAS,CAAEnB,OAAO,CAAC0E,OAAxB,WACG,CAAC5D,SAAD,eACC,eAAQ,QAAQ,CAAE,CAACmB,WAAnB,UACGrB,OAAO,CAAG,OAAH,CAAa,gBADvB,EAFJ,CAMGE,SAAS,eACR,oCACE,KAAC,cAAD,IADF,CACqB,GADrB,GAPJ,CAWG,CAACA,SAAD,eACC,eACE,IAAI,CAAC,QADP,CAEE,SAAS,CAAEd,OAAO,CAAC2E,MAFrB,CAGE,OAAO,CAAEzC,qBAHX,UAKGtB,OAAO,CAAG,oBAAH,CAA0B,6BALpC,EAZJ,CAoBG,CAACE,SAAD,eAAc,KAAC,IAAD,EAAM,EAAE,CAAC,QAAT,iCApBjB,GAjDF,GAFF,GADF,CA6ED,CA9KD,CAgLA,cAAeP,SAAf"},"metadata":{},"sourceType":"module"}